//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace DailyCals.DailyCalsWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteProfileRecordV2", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class RemoteProfileRecordV2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double activitylevelField;
        
        private System.DateTime birthdateField;
        
        private string emailField;
        
        private System.DateTime goaldateField;
        
        private double goalweightField;
        
        private double heightField;
        
        private int isfemaleField;
        
        private int isstandardField;
        
        private string profilepField;
        
        private System.DateTime startdateField;
        
        private double startweightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double activitylevel {
            get {
                return this.activitylevelField;
            }
            set {
                if ((this.activitylevelField.Equals(value) != true)) {
                    this.activitylevelField = value;
                    this.RaisePropertyChanged("activitylevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime birthdate {
            get {
                return this.birthdateField;
            }
            set {
                if ((this.birthdateField.Equals(value) != true)) {
                    this.birthdateField = value;
                    this.RaisePropertyChanged("birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime goaldate {
            get {
                return this.goaldateField;
            }
            set {
                if ((this.goaldateField.Equals(value) != true)) {
                    this.goaldateField = value;
                    this.RaisePropertyChanged("goaldate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double goalweight {
            get {
                return this.goalweightField;
            }
            set {
                if ((this.goalweightField.Equals(value) != true)) {
                    this.goalweightField = value;
                    this.RaisePropertyChanged("goalweight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isfemale {
            get {
                return this.isfemaleField;
            }
            set {
                if ((this.isfemaleField.Equals(value) != true)) {
                    this.isfemaleField = value;
                    this.RaisePropertyChanged("isfemale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isstandard {
            get {
                return this.isstandardField;
            }
            set {
                if ((this.isstandardField.Equals(value) != true)) {
                    this.isstandardField = value;
                    this.RaisePropertyChanged("isstandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string profilep {
            get {
                return this.profilepField;
            }
            set {
                if ((object.ReferenceEquals(this.profilepField, value) != true)) {
                    this.profilepField = value;
                    this.RaisePropertyChanged("profilep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startdate {
            get {
                return this.startdateField;
            }
            set {
                if ((this.startdateField.Equals(value) != true)) {
                    this.startdateField = value;
                    this.RaisePropertyChanged("startdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double startweight {
            get {
                return this.startweightField;
            }
            set {
                if ((this.startweightField.Equals(value) != true)) {
                    this.startweightField = value;
                    this.RaisePropertyChanged("startweight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DailyCalsWS.IDailyCalsServiceV2")]
    public interface IDailyCalsServiceV2 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDailyCalsServiceV2/DoesProfileExist", ReplyAction="http://tempuri.org/IDailyCalsServiceV2/DoesProfileExistResponse")]
        System.IAsyncResult BeginDoesProfileExist(string sid, System.AsyncCallback callback, object asyncState);
        
        bool EndDoesProfileExist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDailyCalsServiceV2/GetProfile", ReplyAction="http://tempuri.org/IDailyCalsServiceV2/GetProfileResponse")]
        System.IAsyncResult BeginGetProfile(string sid, System.AsyncCallback callback, object asyncState);
        
        DailyCals.DailyCalsWS.RemoteProfileRecordV2 EndGetProfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDailyCalsServiceV2/UpdateProfile", ReplyAction="http://tempuri.org/IDailyCalsServiceV2/UpdateProfileResponse")]
        System.IAsyncResult BeginUpdateProfile(DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateProfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDailyCalsServiceV2/InsertProfile", ReplyAction="http://tempuri.org/IDailyCalsServiceV2/InsertProfileResponse")]
        System.IAsyncResult BeginInsertProfile(DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr, System.AsyncCallback callback, object asyncState);
        
        void EndInsertProfile(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDailyCalsServiceV2Channel : DailyCals.DailyCalsWS.IDailyCalsServiceV2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoesProfileExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoesProfileExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DailyCals.DailyCalsWS.RemoteProfileRecordV2 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DailyCals.DailyCalsWS.RemoteProfileRecordV2)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DailyCalsServiceV2Client : System.ServiceModel.ClientBase<DailyCals.DailyCalsWS.IDailyCalsServiceV2>, DailyCals.DailyCalsWS.IDailyCalsServiceV2 {
        
        private BeginOperationDelegate onBeginDoesProfileExistDelegate;
        
        private EndOperationDelegate onEndDoesProfileExistDelegate;
        
        private System.Threading.SendOrPostCallback onDoesProfileExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProfileDelegate;
        
        private EndOperationDelegate onEndGetProfileDelegate;
        
        private System.Threading.SendOrPostCallback onGetProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateProfileDelegate;
        
        private EndOperationDelegate onEndUpdateProfileDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertProfileDelegate;
        
        private EndOperationDelegate onEndInsertProfileDelegate;
        
        private System.Threading.SendOrPostCallback onInsertProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DailyCalsServiceV2Client() {
        }
        
        public DailyCalsServiceV2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DailyCalsServiceV2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DailyCalsServiceV2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DailyCalsServiceV2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<DoesProfileExistCompletedEventArgs> DoesProfileExistCompleted;
        
        public event System.EventHandler<GetProfileCompletedEventArgs> GetProfileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateProfileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertProfileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DailyCals.DailyCalsWS.IDailyCalsServiceV2.BeginDoesProfileExist(string sid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoesProfileExist(sid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool DailyCals.DailyCalsWS.IDailyCalsServiceV2.EndDoesProfileExist(System.IAsyncResult result) {
            return base.Channel.EndDoesProfileExist(result);
        }
        
        private System.IAsyncResult OnBeginDoesProfileExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sid = ((string)(inValues[0]));
            return ((DailyCals.DailyCalsWS.IDailyCalsServiceV2)(this)).BeginDoesProfileExist(sid, callback, asyncState);
        }
        
        private object[] OnEndDoesProfileExist(System.IAsyncResult result) {
            bool retVal = ((DailyCals.DailyCalsWS.IDailyCalsServiceV2)(this)).EndDoesProfileExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoesProfileExistCompleted(object state) {
            if ((this.DoesProfileExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoesProfileExistCompleted(this, new DoesProfileExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoesProfileExistAsync(string sid) {
            this.DoesProfileExistAsync(sid, null);
        }
        
        public void DoesProfileExistAsync(string sid, object userState) {
            if ((this.onBeginDoesProfileExistDelegate == null)) {
                this.onBeginDoesProfileExistDelegate = new BeginOperationDelegate(this.OnBeginDoesProfileExist);
            }
            if ((this.onEndDoesProfileExistDelegate == null)) {
                this.onEndDoesProfileExistDelegate = new EndOperationDelegate(this.OnEndDoesProfileExist);
            }
            if ((this.onDoesProfileExistCompletedDelegate == null)) {
                this.onDoesProfileExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoesProfileExistCompleted);
            }
            base.InvokeAsync(this.onBeginDoesProfileExistDelegate, new object[] {
                        sid}, this.onEndDoesProfileExistDelegate, this.onDoesProfileExistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DailyCals.DailyCalsWS.IDailyCalsServiceV2.BeginGetProfile(string sid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProfile(sid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DailyCals.DailyCalsWS.RemoteProfileRecordV2 DailyCals.DailyCalsWS.IDailyCalsServiceV2.EndGetProfile(System.IAsyncResult result) {
            return base.Channel.EndGetProfile(result);
        }
        
        private System.IAsyncResult OnBeginGetProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sid = ((string)(inValues[0]));
            return ((DailyCals.DailyCalsWS.IDailyCalsServiceV2)(this)).BeginGetProfile(sid, callback, asyncState);
        }
        
        private object[] OnEndGetProfile(System.IAsyncResult result) {
            DailyCals.DailyCalsWS.RemoteProfileRecordV2 retVal = ((DailyCals.DailyCalsWS.IDailyCalsServiceV2)(this)).EndGetProfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProfileCompleted(object state) {
            if ((this.GetProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProfileCompleted(this, new GetProfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProfileAsync(string sid) {
            this.GetProfileAsync(sid, null);
        }
        
        public void GetProfileAsync(string sid, object userState) {
            if ((this.onBeginGetProfileDelegate == null)) {
                this.onBeginGetProfileDelegate = new BeginOperationDelegate(this.OnBeginGetProfile);
            }
            if ((this.onEndGetProfileDelegate == null)) {
                this.onEndGetProfileDelegate = new EndOperationDelegate(this.OnEndGetProfile);
            }
            if ((this.onGetProfileCompletedDelegate == null)) {
                this.onGetProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProfileCompleted);
            }
            base.InvokeAsync(this.onBeginGetProfileDelegate, new object[] {
                        sid}, this.onEndGetProfileDelegate, this.onGetProfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DailyCals.DailyCalsWS.IDailyCalsServiceV2.BeginUpdateProfile(DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateProfile(rpr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DailyCals.DailyCalsWS.IDailyCalsServiceV2.EndUpdateProfile(System.IAsyncResult result) {
            base.Channel.EndUpdateProfile(result);
        }
        
        private System.IAsyncResult OnBeginUpdateProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr = ((DailyCals.DailyCalsWS.RemoteProfileRecordV2)(inValues[0]));
            return ((DailyCals.DailyCalsWS.IDailyCalsServiceV2)(this)).BeginUpdateProfile(rpr, callback, asyncState);
        }
        
        private object[] OnEndUpdateProfile(System.IAsyncResult result) {
            ((DailyCals.DailyCalsWS.IDailyCalsServiceV2)(this)).EndUpdateProfile(result);
            return null;
        }
        
        private void OnUpdateProfileCompleted(object state) {
            if ((this.UpdateProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateProfileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateProfileAsync(DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr) {
            this.UpdateProfileAsync(rpr, null);
        }
        
        public void UpdateProfileAsync(DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr, object userState) {
            if ((this.onBeginUpdateProfileDelegate == null)) {
                this.onBeginUpdateProfileDelegate = new BeginOperationDelegate(this.OnBeginUpdateProfile);
            }
            if ((this.onEndUpdateProfileDelegate == null)) {
                this.onEndUpdateProfileDelegate = new EndOperationDelegate(this.OnEndUpdateProfile);
            }
            if ((this.onUpdateProfileCompletedDelegate == null)) {
                this.onUpdateProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateProfileCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateProfileDelegate, new object[] {
                        rpr}, this.onEndUpdateProfileDelegate, this.onUpdateProfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DailyCals.DailyCalsWS.IDailyCalsServiceV2.BeginInsertProfile(DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertProfile(rpr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DailyCals.DailyCalsWS.IDailyCalsServiceV2.EndInsertProfile(System.IAsyncResult result) {
            base.Channel.EndInsertProfile(result);
        }
        
        private System.IAsyncResult OnBeginInsertProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr = ((DailyCals.DailyCalsWS.RemoteProfileRecordV2)(inValues[0]));
            return ((DailyCals.DailyCalsWS.IDailyCalsServiceV2)(this)).BeginInsertProfile(rpr, callback, asyncState);
        }
        
        private object[] OnEndInsertProfile(System.IAsyncResult result) {
            ((DailyCals.DailyCalsWS.IDailyCalsServiceV2)(this)).EndInsertProfile(result);
            return null;
        }
        
        private void OnInsertProfileCompleted(object state) {
            if ((this.InsertProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertProfileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertProfileAsync(DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr) {
            this.InsertProfileAsync(rpr, null);
        }
        
        public void InsertProfileAsync(DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr, object userState) {
            if ((this.onBeginInsertProfileDelegate == null)) {
                this.onBeginInsertProfileDelegate = new BeginOperationDelegate(this.OnBeginInsertProfile);
            }
            if ((this.onEndInsertProfileDelegate == null)) {
                this.onEndInsertProfileDelegate = new EndOperationDelegate(this.OnEndInsertProfile);
            }
            if ((this.onInsertProfileCompletedDelegate == null)) {
                this.onInsertProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertProfileCompleted);
            }
            base.InvokeAsync(this.onBeginInsertProfileDelegate, new object[] {
                        rpr}, this.onEndInsertProfileDelegate, this.onInsertProfileCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override DailyCals.DailyCalsWS.IDailyCalsServiceV2 CreateChannel() {
            return new DailyCalsServiceV2ClientChannel(this);
        }
        
        private class DailyCalsServiceV2ClientChannel : ChannelBase<DailyCals.DailyCalsWS.IDailyCalsServiceV2>, DailyCals.DailyCalsWS.IDailyCalsServiceV2 {
            
            public DailyCalsServiceV2ClientChannel(System.ServiceModel.ClientBase<DailyCals.DailyCalsWS.IDailyCalsServiceV2> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoesProfileExist(string sid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sid;
                System.IAsyncResult _result = base.BeginInvoke("DoesProfileExist", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDoesProfileExist(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DoesProfileExist", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProfile(string sid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sid;
                System.IAsyncResult _result = base.BeginInvoke("GetProfile", _args, callback, asyncState);
                return _result;
            }
            
            public DailyCals.DailyCalsWS.RemoteProfileRecordV2 EndGetProfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                DailyCals.DailyCalsWS.RemoteProfileRecordV2 _result = ((DailyCals.DailyCalsWS.RemoteProfileRecordV2)(base.EndInvoke("GetProfile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateProfile(DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = rpr;
                System.IAsyncResult _result = base.BeginInvoke("UpdateProfile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateProfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateProfile", _args, result);
            }
            
            public System.IAsyncResult BeginInsertProfile(DailyCals.DailyCalsWS.RemoteProfileRecordV2 rpr, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = rpr;
                System.IAsyncResult _result = base.BeginInvoke("InsertProfile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInsertProfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InsertProfile", _args, result);
            }
        }
    }
}
